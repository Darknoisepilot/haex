{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/plot/Websites/H%C3%A6xsci%C3%B0e/haex/src/lib/mongodb.ts"],"sourcesContent":["import { Collection, Db, Document, MongoClient } from \"mongodb\";\nconst uri = process.env.MONGODB_URI!;\nlet client: MongoClient;\nlet clientPromise: Promise<MongoClient>;\ndeclare global {\n  var _mongoClientPromise: Promise<MongoClient> | undefined;\n}\nif (process.env.NODE_ENV === \"development\") {\n  if (!global._mongoClientPromise) {\n    client = new MongoClient(uri);\n    global._mongoClientPromise = client.connect();\n  }\n  clientPromise = global._mongoClientPromise;\n} else {\n  client = new MongoClient(uri);\n  clientPromise = client.connect();\n}\nexport default clientPromise;\nexport async function getCollection<T extends Document = Document>(\n  name: string\n): Promise<Collection<T>> {\n  const client = await clientPromise;\n  const dbName = process.env.MONGODB_DB || \"haex\";\n  const db: Db = client.db(dbName);\n  return db.collection<T>(name);\n}"],"names":[],"mappings":";;;;;;AAAA;;AACA,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW;AACnC,IAAI;AACJ,IAAI;AAIJ,wCAA4C;IAC1C,IAAI,CAAC,OAAO,mBAAmB,EAAE;QAC/B,SAAS,IAAI,sHAAW,CAAC;QACzB,OAAO,mBAAmB,GAAG,OAAO,OAAO;IAC7C;IACA,gBAAgB,OAAO,mBAAmB;AAC5C;;uCAIe;AACR,eAAe,cACpB,IAAY;IAEZ,MAAM,SAAS,MAAM;IACrB,MAAM,SAAS,QAAQ,GAAG,CAAC,UAAU,IAAI;IACzC,MAAM,KAAS,OAAO,EAAE,CAAC;IACzB,OAAO,GAAG,UAAU,CAAI;AAC1B","debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/plot/Websites/H%C3%A6xsci%C3%B0e/haex/src/app/api/ping/route.ts"],"sourcesContent":["import { getCollection } from \"@/lib/mongodb\";\nexport async function GET() {\n  const col = await getCollection(\"pings\");\n  const res = await col.insertOne({ at: new Date(), note: \"hello\" });\n  const count = await col.countDocuments();\n  return Response.json({ ok: true, insertedId: res.insertedId, total: count });\n}\n"],"names":[],"mappings":";;;;AAAA;;AACO,eAAe;IACpB,MAAM,MAAM,MAAM,IAAA,wIAAa,EAAC;IAChC,MAAM,MAAM,MAAM,IAAI,SAAS,CAAC;QAAE,IAAI,IAAI;QAAQ,MAAM;IAAQ;IAChE,MAAM,QAAQ,MAAM,IAAI,cAAc;IACtC,OAAO,SAAS,IAAI,CAAC;QAAE,IAAI;QAAM,YAAY,IAAI,UAAU;QAAE,OAAO;IAAM;AAC5E","debugId":null}}]
}